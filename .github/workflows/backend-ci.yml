# .github/workflows/backend-ci.yml
name: Backend CI

on:
  push:
    branches: [main, master]
    paths:
      - "padaria-backend/**"
      - ".github/workflows/backend-ci.yml"
  pull_request:
    branches: [main, master]
    paths:
      - "padaria-backend/**"
      - ".github/workflows/backend-ci.yml"

jobs:
  ci:
    name: Node ${{ matrix.node }} • Backend
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        node: [20.x, 22.x]

    defaults:
      run:
        working-directory: padaria-backend

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node ${{ matrix.node }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
          cache: "npm"
          cache-dependency-path: padaria-backend/package-lock.json

      - name: Copy .env.example to .env (safe defaults)
        run: |
          if [ -f .env.example ] && [ ! -f .env ]; then
            cp .env.example .env
          fi

      - name: Install deps (clean)
        run: npm ci

      # Lint: roda só se existir script "lint"
      - name: Lint (if available)
        run: |
          if npm run | grep -q "^  lint$"; then
            npm run lint
          else
            echo "No lint script; skipping."
          fi

      # Testes: roda só se existir script "test"
      - name: Test (if available)
        run: |
          if npm run | grep -q "^  test$"; then
            npm test --silent
          else
            echo "No test script; skipping."
          fi

      # Audit produção apenas (não bloqueia por enquanto)
      - name: Security audit (prod only, non-blocking)
        run: |
          npx npm@latest audit --omit=dev || true

      # Build: roda só se existir script "build"
      - name: Build (if available)
        run: |
          if npm run | grep -q "^  build$"; then
            npm run build
          else
            echo "No build script; skipping."
          fi
